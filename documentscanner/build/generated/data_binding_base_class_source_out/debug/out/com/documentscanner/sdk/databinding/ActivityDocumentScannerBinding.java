// Generated by view binder compiler. Do not edit!
package com.documentscanner.sdk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.documentscanner.sdk.DocumentOverlayView;
import com.documentscanner.sdk.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDocumentScannerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout bottomControls;

  @NonNull
  public final TextView btnAuto;

  @NonNull
  public final TextView btnBackToCamera;

  @NonNull
  public final TextView btnCancel;

  @NonNull
  public final ImageView btnCapture;

  @NonNull
  public final TextView btnColour;

  @NonNull
  public final ImageView btnFlash;

  @NonNull
  public final ImageView btnFocus;

  @NonNull
  public final TextView btnReply;

  @NonNull
  public final TextView btnSave;

  @NonNull
  public final TextView btnSaveDocument;

  @NonNull
  public final ImageView capturedPreview;

  @NonNull
  public final DocumentOverlayView documentOverlay;

  @NonNull
  public final FrameLayout documentViewContainer;

  @NonNull
  public final ViewPager2 documentViewPager;

  @NonNull
  public final LinearLayout documentViewerControls;

  @NonNull
  public final FrameLayout finalDocumentView;

  @NonNull
  public final LinearLayout pageIndicator;

  @NonNull
  public final PreviewView previewView;

  @NonNull
  public final LinearLayout topControls;

  @NonNull
  public final TextView tvStatus;

  private ActivityDocumentScannerBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout bottomControls, @NonNull TextView btnAuto,
      @NonNull TextView btnBackToCamera, @NonNull TextView btnCancel, @NonNull ImageView btnCapture,
      @NonNull TextView btnColour, @NonNull ImageView btnFlash, @NonNull ImageView btnFocus,
      @NonNull TextView btnReply, @NonNull TextView btnSave, @NonNull TextView btnSaveDocument,
      @NonNull ImageView capturedPreview, @NonNull DocumentOverlayView documentOverlay,
      @NonNull FrameLayout documentViewContainer, @NonNull ViewPager2 documentViewPager,
      @NonNull LinearLayout documentViewerControls, @NonNull FrameLayout finalDocumentView,
      @NonNull LinearLayout pageIndicator, @NonNull PreviewView previewView,
      @NonNull LinearLayout topControls, @NonNull TextView tvStatus) {
    this.rootView = rootView;
    this.bottomControls = bottomControls;
    this.btnAuto = btnAuto;
    this.btnBackToCamera = btnBackToCamera;
    this.btnCancel = btnCancel;
    this.btnCapture = btnCapture;
    this.btnColour = btnColour;
    this.btnFlash = btnFlash;
    this.btnFocus = btnFocus;
    this.btnReply = btnReply;
    this.btnSave = btnSave;
    this.btnSaveDocument = btnSaveDocument;
    this.capturedPreview = capturedPreview;
    this.documentOverlay = documentOverlay;
    this.documentViewContainer = documentViewContainer;
    this.documentViewPager = documentViewPager;
    this.documentViewerControls = documentViewerControls;
    this.finalDocumentView = finalDocumentView;
    this.pageIndicator = pageIndicator;
    this.previewView = previewView;
    this.topControls = topControls;
    this.tvStatus = tvStatus;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDocumentScannerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDocumentScannerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_document_scanner, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDocumentScannerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomControls;
      LinearLayout bottomControls = ViewBindings.findChildViewById(rootView, id);
      if (bottomControls == null) {
        break missingId;
      }

      id = R.id.btnAuto;
      TextView btnAuto = ViewBindings.findChildViewById(rootView, id);
      if (btnAuto == null) {
        break missingId;
      }

      id = R.id.btnBackToCamera;
      TextView btnBackToCamera = ViewBindings.findChildViewById(rootView, id);
      if (btnBackToCamera == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      TextView btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnCapture;
      ImageView btnCapture = ViewBindings.findChildViewById(rootView, id);
      if (btnCapture == null) {
        break missingId;
      }

      id = R.id.btnColour;
      TextView btnColour = ViewBindings.findChildViewById(rootView, id);
      if (btnColour == null) {
        break missingId;
      }

      id = R.id.btnFlash;
      ImageView btnFlash = ViewBindings.findChildViewById(rootView, id);
      if (btnFlash == null) {
        break missingId;
      }

      id = R.id.btnFocus;
      ImageView btnFocus = ViewBindings.findChildViewById(rootView, id);
      if (btnFocus == null) {
        break missingId;
      }

      id = R.id.btnReply;
      TextView btnReply = ViewBindings.findChildViewById(rootView, id);
      if (btnReply == null) {
        break missingId;
      }

      id = R.id.btnSave;
      TextView btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.btnSaveDocument;
      TextView btnSaveDocument = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveDocument == null) {
        break missingId;
      }

      id = R.id.capturedPreview;
      ImageView capturedPreview = ViewBindings.findChildViewById(rootView, id);
      if (capturedPreview == null) {
        break missingId;
      }

      id = R.id.documentOverlay;
      DocumentOverlayView documentOverlay = ViewBindings.findChildViewById(rootView, id);
      if (documentOverlay == null) {
        break missingId;
      }

      id = R.id.documentViewContainer;
      FrameLayout documentViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (documentViewContainer == null) {
        break missingId;
      }

      id = R.id.documentViewPager;
      ViewPager2 documentViewPager = ViewBindings.findChildViewById(rootView, id);
      if (documentViewPager == null) {
        break missingId;
      }

      id = R.id.documentViewerControls;
      LinearLayout documentViewerControls = ViewBindings.findChildViewById(rootView, id);
      if (documentViewerControls == null) {
        break missingId;
      }

      id = R.id.finalDocumentView;
      FrameLayout finalDocumentView = ViewBindings.findChildViewById(rootView, id);
      if (finalDocumentView == null) {
        break missingId;
      }

      id = R.id.pageIndicator;
      LinearLayout pageIndicator = ViewBindings.findChildViewById(rootView, id);
      if (pageIndicator == null) {
        break missingId;
      }

      id = R.id.previewView;
      PreviewView previewView = ViewBindings.findChildViewById(rootView, id);
      if (previewView == null) {
        break missingId;
      }

      id = R.id.topControls;
      LinearLayout topControls = ViewBindings.findChildViewById(rootView, id);
      if (topControls == null) {
        break missingId;
      }

      id = R.id.tvStatus;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      return new ActivityDocumentScannerBinding((RelativeLayout) rootView, bottomControls, btnAuto,
          btnBackToCamera, btnCancel, btnCapture, btnColour, btnFlash, btnFocus, btnReply, btnSave,
          btnSaveDocument, capturedPreview, documentOverlay, documentViewContainer,
          documentViewPager, documentViewerControls, finalDocumentView, pageIndicator, previewView,
          topControls, tvStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
